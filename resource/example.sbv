def f1(var wara: int) -> void {
    val baseFreq: Double  = 440.0;
}

def f2(var wara: int, val ci: int, val doGara: Double) -> Double {
    val baseFreq: Double  = 440.0;
    return baseFreq;
}


def main() -> void
{
    val sampleRate: float = 44100;
    val duration: int = 30;

    val surfed: Unarf = x -> Math.sin(x); //sin
    val ceilsFun: Unarf =  time -> 440 + 1000 * (Math.ceil(time) % 3);
    val combinedFun: Unarf = time -> (40 + (1000 + 500 * Math.sin(time * time * Math.PI * 2)
            + 400 * Math.sin(time * 2 * Math.PI * 2)) * ((Math.ceil(time) % 3 + 1) / 2)); //combined
    val freqFun: Unarf = x -> ceilsFun.apply(x) + combinedFun.apply(x);


    val amplitude: Unarf = t -> {
        return  Math.sin(t)  * Math.min(1, Math.ceil(t* 4) % 4) * 127.0;
    };


    __singMyBeaverRestrictedName(
        duration,
        surfed,
        freqFun,
        amplitude,
        sampleRate
    );
}